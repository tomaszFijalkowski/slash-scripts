// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "GeometryCollection/GeometryCollectionComponent.h"
#include "Interfaces/HitInterface.h"
#include "Items/Weapons/Weapon.h"
#include "BreakableActor.generated.h"

struct FChaosBreakEvent;
class UFoliageInstancedStaticMeshComponent;
class UCapsuleComponent;
class USphereComponent;
class AItem;

UCLASS()
class SLASH_API ABreakableActor : public AActor, public IHitInterface
{
	GENERATED_BODY()

public:
	ABreakableActor();
	virtual void Tick(float DeltaTime) override;

	// GetHit_Implementation is generated by UFUNCTION(BlueprintNativeEvent)
	virtual void GetHit_Implementation(const FVector& ImpactPoint, ABaseCharacter* Hitter) override;

	void SetFoliageProperties(UFoliageInstancedStaticMeshComponent* InstancedMesh, const FTransform& Transform,
	                          FGuid Identifier);

protected:
	virtual void BeginPlay() override;

	UFUNCTION()
	virtual void OnBreak(const FChaosBreakEvent& BreakEvent);

	UFUNCTION()
	virtual void OnSphereBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor,
	                                  UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep,
	                                  const FHitResult& SweepResult);

	UFUNCTION()
	virtual void OnSphereEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor,
	                                UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite)
	TObjectPtr<UGeometryCollectionComponent> GeometryCollection;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite)
	TObjectPtr<UCapsuleComponent> Capsule;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite)
	TObjectPtr<USphereComponent> Sphere;

private:
	void RemoveNavModifier();
	void DisableCollision();
	void PlayBreakSound();
	void SpawnTreasure();

	UPROPERTY(EditAnywhere, Category = "Breakable Properties")
	TObjectPtr<USoundBase> BreakSound;

	UPROPERTY(EditAnywhere, Category = "Breakable Properties")
	TArray<TSubclassOf<AItem>> TreasureClasses;

	UPROPERTY(EditAnywhere, Category = "Breakable Properties")
	TArray<TSubclassOf<AWeapon>> WeaponClasses;

	UPROPERTY(EditAnywhere, Category = "Breakable Properties")
	float DestroyLifeSpan = 5.f;

	UPROPERTY(VisibleAnywhere, Category = "Foliage Properties")
	UFoliageInstancedStaticMeshComponent* FoliageInstancedMesh;

	UPROPERTY(VisibleAnywhere, Category = "Foliage Properties")
	FTransform FoliageTransform;

	UPROPERTY(VisibleAnywhere, Category = "Foliage Properties")
	FGuid FoliageIdentifier;

	UPROPERTY()
	bool bBroken = false;

public:
	FORCEINLINE UFoliageInstancedStaticMeshComponent* GetFoliageInstancedMesh() const { return FoliageInstancedMesh; }
	FORCEINLINE FTransform GetFoliageTransform() const { return FoliageTransform; }
	FORCEINLINE FGuid GetFoliageIdentifier() const { return FoliageIdentifier; }
	FORCEINLINE bool IsBroken() const { return bBroken; }
};
